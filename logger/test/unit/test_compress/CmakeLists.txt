# 最低CMake版本要求
cmake_minimum_required(VERSION 3.15)

# 定义测试目标名称
project(logger_compress_test)

# 设置C++标准
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 仅编译 compress 模块的最小依赖
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(UTIL_SRCS ../../../utils/sys_util_linux.cc ../../../utils/file_util.cc)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(UTIL_SRCS ../../../utils/sys_util_win.cc ../../../utils/file_util.cc)
else()
    message(FATAL_ERROR "unsupported.")
endif()

set(COMPRESS_SRCS ../../../compress/zlib_compress.cc ../../../compress/zstd_compress.cc)

# 配置第三方库路径（关键步骤）
get_filename_component(PROJECT_ROOT_DIR "${CMAKE_CURRENT_LIST_DIR}/../../.." ABSOLUTE)

# 1. 设置第三方库的头文件目录（include路径）
set(THIRD_PARTY_INCLUDE_DIR "${PROJECT_ROOT_DIR}/third_party/x64-linux/include")

# 查找第三方库（通过 CMAKE_PREFIX_PATH 定位到 third_party）
find_package(ZLIB REQUIRED)
find_package(zstd REQUIRED)

# 添加测试源文件
add_executable(compress_test
    compress_test.cc
    ${COMPRESS_SRCS}
    ${UTIL_SRCS}
)

# 包含头文件目录
target_include_directories(compress_test PRIVATE
    ${PROJECT_ROOT_DIR}
    ${THIRD_PARTY_INCLUDE_DIR}
)

# 链接第三方库
target_link_libraries(compress_test PRIVATE
    ZLIB::ZLIB
    zstd::libzstd_static
)

# 启用并注册测试
enable_testing()
add_test(NAME compress_test COMMAND compress_test)

