# 最低CMake版本要求
cmake_minimum_required(VERSION 3.15)

# 定义测试目标名称
project(logger_formatter_test)

# 设置C++标准
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 仅编译 formatter 模块的最小依赖
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(UTIL_SRCS ../../../utils/sys_util_linux.cc ../../../utils/file_util.cc)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(UTIL_SRCS ../../../utils/sys_util_win.cc ../../../utils/file_util.cc)
else()
    message(FATAL_ERROR "unsupported.")
endif()

set(FORMATTER_SRCS ../../../formatter/default_formatter.cc ../../../formatter/effective_formatter.cc ../../../formatter/effective_msg.pb.cc)

# 配置第三方库路径（关键步骤）
get_filename_component(PROJECT_ROOT_DIR "${CMAKE_CURRENT_LIST_DIR}/../../.." ABSOLUTE)

# 1. 设置第三方库的头文件目录（include路径）
set(THIRD_PARTY_INCLUDE_DIR "${PROJECT_ROOT_DIR}/third_party/x64-linux/include")

# 依赖 fmt 与 protobuf（protobuf 静态库依赖 absl 与 utf8_range）
find_package(fmt REQUIRED)
find_package(Protobuf REQUIRED)
find_package(absl REQUIRED)
find_package(utf8_range REQUIRED)

# 添加测试源文件
add_executable(formatter_test
    formatter_test.cc
    ${FORMATTER_SRCS}
    ${UTIL_SRCS}
)

# 包含头文件目录
target_include_directories(formatter_test PRIVATE
    ${PROJECT_ROOT_DIR}
    ${THIRD_PARTY_INCLUDE_DIR}
)

target_link_libraries(formatter_test PRIVATE
    fmt::fmt
    protobuf::libprotobuf
    absl::strings
    absl::log_initialize
    absl::log_globals
    absl::log_severity
    absl::absl_check
    absl::absl_log
    absl::algorithm
    absl::base
    absl::bind_front
    absl::bits
    absl::btree
    absl::cleanup
    absl::cord
    absl::core_headers
    absl::debugging
    absl::die_if_null
    absl::dynamic_annotations
    absl::flags
    absl::flat_hash_map
    absl::flat_hash_set
    absl::function_ref
    absl::hash
    absl::if_constexpr
    absl::layout
    absl::memory
    absl::node_hash_map
    absl::node_hash_set
    absl::optional
    absl::random_distributions
    absl::random_random
    absl::span
    absl::status
    absl::statusor
    absl::synchronization
    absl::time
    absl::type_traits
    absl::utility
    absl::variant
    utf8_range::utf8_validity
)

# 启用并注册测试
enable_testing()
add_test(NAME formatter_test COMMAND formatter_test)

